esphome:
  name: ${device_name}
  # on_boot:
  #   - lambda: |-
  #       id(ota_id).set_auth_password("REPLACE_ME");
esp32:
  board: esp32doit-devkit-v1
#   framework:
#     type: esp-idf

sensor:
  - platform: dht
    model: DHT22
    pin: ${temp_pin}
    temperature:
      name: ${name} Temperature
      id: fan_temperature
      accuracy_decimals: 3
      filters:
         - exponential_moving_average:
             alpha: 0.1
             send_every: 1
    humidity:
      name: ${name} Humidity
    update_interval: 5s

  - platform: pulse_counter
    pin:
      number: ${fan_pulse_pin}
      mode: INPUT_PULLUP
    unit_of_measurement: 'RPM'
    id: fan_speed
    name: ${name} Fan Speed
    accuracy_decimals: 0
    filters:
      - multiply: 0.5

output:
  - platform: ledc
    id: output_fan
    pin: ${fan_power_pin}
    frequency: 25000 Hz
    min_power: ${min_power}
    max_power: ${max_power}
    zero_means_zero: true

fan:
  - platform: speed
    output: output_fan
    name: ${name} Fan

climate:
  - platform: pid
    name:  ${name} PID
    id: thermostat
    sensor: fan_temperature
    default_target_temperature: ${default_target_temperature}
    cool_output: output_fan
    # The extents of the HA Thermostat
    visual:
      min_temperature: 20 째C
      max_temperature: 35 째C

    control_parameters:
      kp: ${kp}
      ki: ${ki}
      kd: ${kd}
      output_averaging_samples: 1
      derivative_averaging_samples: 5

    # How to behave when close to the target temperature?
    deadband_parameters:
      threshold_high: 0.4째C
      threshold_low: -0.4째C
      kp_multiplier: ${kp_multiplier}
      ki_multiplier: ${ki_multiplier}
      kd_multiplier: ${kd_multiplier}
      deadband_output_averaging_samples: 10

button:
  - platform: template
    name: "${name} PID Climate Autotune"
    on_press:
      - climate.pid.autotune: thermostat